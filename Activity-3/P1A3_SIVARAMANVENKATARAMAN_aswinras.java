/*
AUTHOR: S.V.Aswin ram
Original Creation Date: 06/09/2017
Last modification Date: 06/10/2017
Description: This program has the following functionalities:
			 1) There is a function named welcome, which takes a username as input and prints customized welcome message. It also
			 prints the Game's author name and the intstructions pertaining to the game
			 2) There is a function named rollDie, that generates a number between a given minimum and maximum value
			 3) There is a function named playManual, which is called when the user chooses manual mode for playing
			 4) There is a function named playAutomatic, which is called when the user chooses automatic mode for playing	
*/
import java.util.*;

import java.util.Random;

class P1A3_SIVARAMANVENKATARAMAN_aswinras
{

// The below function accepts the username as input and prints welcome message, along with the game instructions
	public static void welcome(String name)
	{
		System.out.println("*********Let's see if you can get lucky!!**********");
		System.out.println("Hello "+name);
		System.out.println("\n\nGame's Author:S.V.Aswin ram");
		System.out.println("\nGame instructions: A new player begins with his first dice roll (4 die = 1 set of dice). This is known as the starting roll");
		System.out.println("1) If the player rolls a 6, 12, 18, or 24 the player wins");
		System.out.println("2) If the player rolls a 9, 11, 17, 19, or 23 the player loses.");
		System.out.println("3) If the player rolls any other number, the starting roll becomes the goal number.");	
		System.out.println("\t3a)The player must continue to roll the dice until either one of two things happens:");
		System.out.println("\t\t a) The player rolls an 11, and he loses.");
		System.out.println("\t\t b) The player rolls the goal number again, and he wins");

	}

/* This function is called when the user chooses manual mode for playing the game. Based on the die results, win or loss result
is based is displayed. After the result is displayed, the user is asked if he wants to play again. This function takes a array of
die objects as input, which consists of 4 die.*/

	public static void playManual(Die[] die)
	{
		/*
			roll_value= When an array of die objects is passed to sumDieValues() function, it returns a value which is the sum of
			values generated by each die. This sum is stored in roll_value
			
			goal_number= If the die value generated, is not equal to [6, 12, 18,24,9, 11, 17, 19,23], it is stored in 
			this variable. The next time die is thrown, the die result is checked against this variable. The user wins, if the new
			die result equals the goal_number.

			sc= This is a object of Scanner class. It is used for accepting input from user.
			
		*/	

		int roll_value,goal_number;

		Scanner sc=new Scanner(System.in);


		
			System.out.println("\nRolling the die!!");

			roll_value=P1A3_DIE_SIVARAMANVENKATARAMAN_aswinras.sumDieValues(die);  

			System.out.println("\nValue after rolling:"+roll_value);

			if(roll_value==6 || roll_value==12 || roll_value==18 || roll_value==24 )
			{
				System.out.println("\nYou win!!");
			}	
			else if(roll_value==9 || roll_value==11 || roll_value==17 ||roll_value==19 || roll_value==23 )
			{
				System.out.println("\nYou lose!!");
			}	

			else
			{
				
				boolean gameEnded=false; // This variable is used to check if any result has been obtained from the game

				goal_number=roll_value; // Next time when die is thrown, if it equals this goal_number, the user wins.

				while(gameEnded==false)
				{
					System.out.println("\nGoal Number for the next roll:"+goal_number);

					roll_value=P1A3_DIE_SIVARAMANVENKATARAMAN_aswinras.sumDieValues(die);

					System.out.println("\nValue after rolling:"+roll_value);

					if(roll_value==11)
						{
							System.out.println("\nYou lose!!");
							gameEnded=true;
						}	
					else if(roll_value==goal_number)
						{
							System.out.println("\nYou win!!");
							gameEnded=true;
						}
					else
					{
						System.out.println("\nNo result has been obtained yet!!");
					}		
				}	
			} 

		// This function is called to allow the user choose manual or automatic mode of playing the game
			P1A3_DIE_SIVARAMANVENKATARAMAN_aswinras.chooseMode();	
	} 


/* This function accepts the number of times the system should play and a array of die objects as input. After the system
has played specified number of times, the user is asked whether he wants to continue playing or quit the game. The number
of wins and losses is also displayed after the system finishes playing the game*/

	public static void playAutomatic(int numberofTimes,Die[] die)
	{

		/*
			roll_value= When an array of die objects is passed to sumDieValues() function, it returns a value which is the sum of
			values generated by each die. This sum is stored in roll_value
			
			goal_number= If the die value generated, is not equal to [6, 12, 18,24,9, 11, 17, 19,23], it is stored in 
			this variable. The next time die is thrown, the die result is checked against this variable. The user wins, if the new
			die result equals the goal_number.

			losses- The number of times, the computer loses is stored in this variable

			wins- The number of times, the computer wins is stored in this variable

			i- The index variable i is used to keep track of the number of times system is playing

			sc- This is a object of scanner class, which is used for accepting input from user.

	*/

		int roll_value,goal_number,i=0,losses=0,wins=0;

		Scanner sc=new Scanner(System.in);


		while(i<numberofTimes)
		{
			System.out.println("\nRolling the die!!");

			roll_value=P1A3_DIE_SIVARAMANVENKATARAMAN_aswinras.sumDieValues(die);  // Since there are 4 die, the minimum value we can get is 4 and maximum is 24

			System.out.println("\nValue after rolling:"+roll_value);

			if(roll_value==6 || roll_value==12 || roll_value==18 || roll_value==24 )
			{
				System.out.println("\nYou win!!");
				wins++;
				i++;
			}	
			else if(roll_value==9 || roll_value==11 || roll_value==17 ||roll_value==19 || roll_value==23 )
			{
				System.out.println("\nYou lose!!");
				losses++;
				i++;
			}	

			else
			{
				
				boolean gameEnded=false;// This variable is used to check, if result has been obtained in the game

				goal_number=roll_value; // Next time when die is thrown, if it equals this goal_number, the user wins

				while(gameEnded==false)
				{
					System.out.println("\nGoal Number for the next roll:"+goal_number);

					roll_value=P1A3_DIE_SIVARAMANVENKATARAMAN_aswinras.sumDieValues(die);

					System.out.println("\nValue after rolling:"+roll_value);

					if(roll_value==11)
						{
							System.out.println("\nYou lose!!");
							gameEnded=true;
							losses++;
							i++;
						}	
					else if(roll_value==goal_number)
						{
							System.out.println("\nYou win!!");
							gameEnded=true;
							wins++;
							i++;
						}
					else
					{
						System.out.println("\nNo result has been obtained yet!!");
					}		
				}	
			}	

		} //end of while loop	

		System.out.println("\nNumber of times played:"+numberofTimes);

		System.out.println("\nNumber of wins:"+wins);

		System.out.println("\nNumber of losses:"+losses);

		// The chooseMode() function is called to ensure the user plays the game again

		P1A3_DIE_SIVARAMANVENKATARAMAN_aswinras.chooseMode();	
		

	} 

}					

