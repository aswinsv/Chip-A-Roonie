/*
AUTHOR: S.V.Aswin ram
Original Creation Date: 06/09/2017
Last modification Date: 06/10/2017
Program Description: This program contains the following functionalities:
					 1) It contains a die class, through which we instantiate 4 die objects, for playing the game.
					 2) It has a function named sumDieValues(Die[] d), which accepts array of die objects as input and sums 
					 the value generated by each of the die object and returns the total.
					 3) It has a function named chooseMode(), using which the user can choose the mode for playing the game or
					 he can exit the game if he wants.

*/

import java.util.*;

/* 
Attributes of the die class

numberOfSides- it indicates the number of sides in a die. The default value is 6
currentValue-  it is the value which is currently generated in the die. The default value is 1
color- it indicates the color of the die. The default value is red
numberOfInstances- When each die object is created, the numberOfInstances is incremented. It indicates the number of 
die objects.

*/

/* 
Methods of the die class:

public int getNumberOfSides()- returns the number of sides in a die
public int getCurrentValue()- returns the value present in the die
public String getColor()- returns color of the die
public void setNumberOfSides(int num)- used to change the number of sides of a die
public void setCurrentValue(int val)- used to change value present in the die
public void setColor(String color)- used to change the color of the die
public int rollDie()- it is used to roll a particular die object

*/

class Die
{

private int numberOfSides;

private int currentValue;

private String color;

static int numberOfInstances;

// By default, the die has been assigned 6 sides, red color and currentValue to be 1. 
// The user can choose to modify this using parameterized constructor

Die()
{
	this.numberOfSides=6;
	this.currentValue=1;
	this.color="red";
	numberOfInstances++;
}

Die(int numberOfSides,int currentValue,String color)
{
	this.numberOfSides=numberOfSides;
	this.currentValue=currentValue;
	this.color=color;
	numberOfInstances++;

} 	

public int getNumberOfSides()
{
	return this.numberOfSides;
}

public int getCurrentValue()
{
	return this.currentValue;
}

public String getColor()
{
	return this.color;
}

public void setNumberOfSides(int num)
{
	this.numberOfSides=num;
} 

public void setCurrentValue(int val)
{
	this.currentValue=val;
} 

public void setColor(String color)
{
	this.color=color;
}

public int rollDie()
{
	Random ran=new Random();

	int randomNum = ran.nextInt(6) + 1;

    this.currentValue=randomNum;

    return this.currentValue;

}


} // end of die class

public class P1A3_DIE_SIVARAMANVENKATARAMAN_aswinras
{
	/*This method calls the rollDie() of all the die objects and returns the sum of the values generated by each of 
	  the die objects */

	public static int sumDieValues(Die[] d)
	{
		int roll_value=0,total=0;

		for(int i=0;i<d.length;i++)
		{
			roll_value=d[i].rollDie();

			total+=roll_value;

		}

		return total;
	}

/* This method is used to allow the user choose between automatic or manual mode of playing the game. The user can also
   choose to exit from the program if he wants to. Before calling the manual or automatic method of playing the game, 
   the method instantiates four die objects. */

	public static void chooseMode()
	{
		Scanner sc=new Scanner(System.in);

		int userChoice=0,numTimes=0;

		Die die[]=new Die[4];

		for(int i=0;i<die.length;i++)
		{
			die[i]=new Die();
		}

		System.out.println("\nHow do you want to play the game? (Manual=0,Automatic=1,Exit=2)");

		userChoice=sc.nextInt();

		if(userChoice==0)
			P1A3_SIVARAMANVENKATARAMAN_aswinras.playManual(die);
		
		else if(userChoice==1)
		{
			System.out.println("\nEnter the number of times you want the system to play?");
			numTimes=sc.nextInt();
			P1A3_SIVARAMANVENKATARAMAN_aswinras.playAutomatic(numTimes,die);
		}
		else
		{
			System.exit(0);
		}	
			


	}


	public static void main(String[] args)
	{
		/* sc= This is an object of scanner class, which is used for accepting input from user.
		   name= The name of the user is stored in this variable */
		
		Scanner sc=new Scanner(System.in);
		
		System.out.println("Please enter your name?");

		String name=sc.next();

		P1A3_SIVARAMANVENKATARAMAN_aswinras.welcome(name);

		chooseMode();

		
			
    }	

}